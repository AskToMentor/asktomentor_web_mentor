import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import TipsBox from '../TipBox';
import im from "../../assets/instru.png";
const GenerateQuiz = () => {
    // State to hold form data
    const [formData, setFormData] = useState({
        name: '',
        subject: '',
        difficulty: 'easy',
        num_questions: '5',
        file: null,
        api_key: ''
    });
    const [isOtherSubject, setIsOtherSubject] = useState(false);
    const navigate = useNavigate();

    // Handle input change
    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData({
            ...formData,
            [name]: value,
        });
    };

    // Handle subject dropdown change
    const handleSubjectChange = (e) => {
        const value = e.target.value;
        if (value === 'other') {
            setIsOtherSubject(true);
            setFormData({
                ...formData,
                subject: '',
            });
        } else {
            setIsOtherSubject(false);
            setFormData({
                ...formData,
                subject: value,
            });
        }
    };

    // Handle file input change
    const handleFileChange = (e) => {
        const file = e.target.files[0];
        if (file && (file.type === 'application/pdf' || file.type === 'application/msword' || file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document')) {
            setFormData({
                ...formData,
                file: file,
            });
        } else {
            alert("Please upload a PDF or DOC file.");
        }
    };

    // Handle form submission
    const handleSubmit = async (e) => {
        e.preventDefault();
        const endPoint = 'generate_quiz';
        // Create a new FormData object
        if (formData.file) {
            const formDataObject = new FormData();
            formDataObject.append('name', formData.name);
            formDataObject.append('api_key', formData.api_key);
            formDataObject.append('difficulty', formData.difficulty);
            formDataObject.append('num_questions', formData.num_questions);
            formDataObject.append('file', formData.file);
            navigate('/question-sheet', { state: { formData: formDataObject, endPoint } });
            setFormData({
                name: '',
                subject: '',
                difficulty: 'easy',
                num_questions: '5', // Default value
                file: null, // File upload
                api_key: ''
            });
            return;
        }
        console.log('Form data:', formData);
        navigate('/question-sheet', { state: { formData, endPoint } });
        setFormData({
            name: '',
            subject: '',
            difficulty: 'easy',
            num_questions: '5', // Default value
            file: null, // File upload
            api_key: ''
        });
    };

    const tips = [
        "After you complete the details, a test screen will open displaying:",
        "1. The number of questions you are providing.",
        "2. The question format will include a mix of multiple-choice, true/false, and question-answer types.",
        "3. There will be no negative marking.",
        "4. The tests will be randomly generated by AI.",
        "5. You must submit your answers within the allotted time.",
        "6. After you complete the questions, your marks will be displayed at the end upon submission."
    ];

    return (
        <div className='h-full pt-[9.5rem] overflow-y-auto flex items-center justify-left'>
            <div className='bg-[#2F3B44] text-white h-[793px] w-full w-[880px] p-8'>
                <div className='flex flex-col lg:flex-row items-center'>
                    {/* Form Section */}
                    <div className='lg:w-2/3 w-full'>
                        <h2 className='text-white font-bold text-2xl mb-6'>Generate Quiz</h2>
                        <p className='text-white mb-6'>Welcome to the quiz generator! Please fill in the details below to Start.</p>
                        <form className='space-y-6' onSubmit={handleSubmit}>
                            <div className='flex flex-col lg:flex-row gap-4'>
                                <div className={`w-full lg:w-${isOtherSubject ? '1/2' : 'full'}`}>
                                    <label className='text-white block mb-2'>Subject:</label>
                                    <select
                                        name="subject"
                                        className='w-full py-2 px-4 rounded-md border border-gray-600 bg-gray-700 text-white'
                                        value={formData.subject}
                                        onChange={handleSubjectChange}
                                    >
                                        <option value="">Select Subject</option>
                                        <option value="Math">Math</option>
                                        <option value="Science">Science</option>
                                        <option value="English">English</option>
                                        <option value="other">Other</option>
                                    </select>
                                </div>
                                {isOtherSubject && (
                                    <div className='w-full lg:w-1/2'>
                                        <label className='text-white block mb-2'>Enter Subject:</label>
                                        <input
                                            type="text"
                                            name="subject"
                                            className='w-full py-2 px-4 rounded-md border border-gray-600 bg-gray-700 text-white'
                                            placeholder="Enter Custom Subject"
                                            value={formData.subject}
                                            onChange={handleInputChange}
                                        />
                                    </div>
                                )}
                            </div>

                            <div className='flex flex-col lg:flex-row gap-4'>
                                <div className='w-full'>
                                    <label className='text-white block mb-2'>No. of Questions:</label>
                                    <select
                                        name="num_questions"
                                        className='w-full py-2 px-4 rounded-md border border-gray-600 bg-gray-700 text-white'
                                        value={formData.num_questions}
                                        onChange={handleInputChange}
                                    >
                                        <option value="5">5</option>
                                        <option value="10">10</option>
                                        <option value="15">15</option>
                                        <option value="20">20</option>
                                    </select>
                                </div>
                            </div>
                            <div>
                                <label className='text-white block mb-2'>Difficulty:</label>
                                <select
                                    name="difficulty"
                                    className='w-full py-2 px-4 rounded-md border border-gray-600 bg-gray-700 text-white'
                                    value={formData.difficulty}
                                    onChange={handleInputChange}
                                >
                                    <option value="easy">Easy</option>
                                    <option value="medium">Medium</option>
                                    <option value="hard">Hard</option>
                                </select>
                            </div>
                            <div className='flex flex-col'>
                                <label className='text-white block mb-2'>API Key:</label>
                                <input
                                    name='api_key'
                                    value={formData.api_key}
                                    type="text" placeholder='Enter API Key'
                                    className='py-2 px-4 bg-gray-700 text-white rounded-md'
                                    onChange={handleInputChange}
                                />
                            </div>
                            <div className='flex flex-col'>
                                <label className='text-white block mb-2'>Upload File (Optional):</label>
                                <input
                                    name='file'
                                    type="file"
                                    accept=".pdf,.doc,.docx"
                                    className='py-2 px-4 bg-gray-700 text-white rounded-md'
                                    onChange={handleFileChange}
                                />
                                <p className='text-gray-400 text-sm mt-2'>
                                    Upload PDF, DOC, if you wish to create a test from your own book or document with max size 20MB only.
                                </p>
                            </div>

                            <div className='flex justify-center'>
                                <button className='rounded-full max-w-[200px] transition duration-500 w-full bg-[#124E66] hover:bg-[#212a31] text-white'>Generate Quiz</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div className='mt-[17px] '>
                                    {/* Image Section */}
                    <div className='lg:w-1/3 w-full flex justify-center lg:justify-start lg:mb-0 mt-44'>
                     <img src={im} alt="Guruji" className='max-w-full h-auto rounded-lg self-center' />
                    </div>
                <TipsBox tips={tips} />
            </div>
        </div>
    );
};

export default GenerateQuiz;
